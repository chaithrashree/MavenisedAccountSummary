<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="AccountQuery-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="AccountQuery-config" raml="AccountQuery.raml" consoleEnabled="true" consolePath="console" doc:name="Router"/>
    <db:oracle-config name="Oracle_Configuration" host="10.7.153.173" port="1521" instance="oratest" user="muleuser" password="mule123" doc:name="Oracle Configuration"/>
    <flow name="AccountQuery-main">
        <http:listener config-ref="AccountQuery-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="AccountQuery-config" doc:name="APIkit Router"/>
        <exception-strategy ref="AccountQuery-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="get:/Query:AccountQuery-config">
        <set-session-variable variableName="userId" value="#[message.inboundProperties.'http.query.params'.userID]" doc:name="UserId_Var"/>
        <set-session-variable variableName="accountNumber" value="#[message.inboundProperties.'http.query.params'.accountNumber]" doc:name="Account_Number_Var"/>

        <db:select config-ref="Oracle_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select count(*) from SUNTRUST_ACCOUNT where User_ID = #[sessionVars.userId] and AccountNumber = #[sessionVars.accountNumber]]]></db:parameterized-query>


        </db:select>

        <choice doc:name="Choice">
            <when expression="#[payload[0]['count(*)']==1]">
                <db:select config-ref="Oracle_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[select su.First_Name,su.Last_Name,sa.AccountNumber,sa.Balance,sa.AccountType,sa.User_ID
from SUNTRUST_USER su join 
SUNTRUST_ACCOUNT sa on
sa.USER_ID = su.USER_ID
where sa.AccountNumber = #[sessionVars.accountNumber] and su.User_ID = #[sessionVars.userId]]]></db:parameterized-query>

                </db:select>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload  map
{
		UserID : $.USER_ID,
		FirstName : $.FIRST_NAME,
		LastName : $.LAST_NAME,
		AccountNumber : $.ACCOUNTNUMBER,
		AccountType : $.ACCOUNTTYPE,
		Balance :$.BALANCE
}]]></dw:set-payload>
                </dw:transform-message>


                <set-payload value="#[payload]" doc:name="Set Payload"/>
            </when>
            <when expression="#[payload[0]['count(*)']!=1]">
                <set-payload doc:name="Set Payload" value="{&quot;Message&quot; : &quot;Invalid User Id  or  Account Number&quot;}"/>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger" message="{&quot;Message&quot; : &quot;invalid input&quot;}"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="post:/Query:AccountQuery-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <apikit:mapping-exception-strategy name="AccountQuery-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
